
import java.awt.Dimension;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author James , J'lesa, Trayvon
 */
public class SearchEngineFinalProj extends javax.swing.JFrame {

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchEngineFinalProj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchEngineFinalProj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchEngineFinalProj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchEngineFinalProj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEngineFinalProj().setVisible(true);
            }
        });
    }

    /**
     * Creates new form SearchEngineFinalProj
     */
    public SearchEngineFinalProj() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        SearchButton = new javax.swing.JToggleButton();
        inputTitle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        inputAuthor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        inputPublisher = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        inputDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputKeywords = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        inputStartDate = new javax.swing.JTextField();
        inputEndDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ClearButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UNCG CSC Departmental Library Search");

        jTextPane1.setEditable(false);
        jTextPane1.setBackground(new java.awt.Color(240, 240, 240));
        jTextPane1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jTextPane1.setText(" Computer Science Departmental Search Engine\n             Filll in the sections below to \n                  complete your search !");
        jScrollPane1.setViewportView(jTextPane1);

        SearchButton.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        SearchButton.setText(" Search It !");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        inputTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputTitleKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel1.setText("Search by Author");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel2.setText("Search by Title");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel3.setText("Search by Publisher");

        inputDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputDateKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel4.setText("Search by Publishing Date");

        inputKeywords.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputKeywordsKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel5.setText("Search by Title Keyword");

        inputStartDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputStartDateKeyTyped(evt);
            }
        });

        inputEndDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputEndDateKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel6.setText("Search a Range of Dates");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel7.setText("to");

        ClearButton.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ClearButton.setText("Clear");
        ClearButton.setActionCommand("Clear Form");
        ClearButton.setMaximumSize(new java.awt.Dimension(100, 23));
        ClearButton.setMinimumSize(new java.awt.Dimension(100, 23));
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputKeywords, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7)
                                .addGap(5, 5, 5)
                                .addComponent(inputEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputKeywords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed

        //format input
        if ("".equals(inputDate.getText())) {
            inputDate.setText("0");
        }
        if ("".equals(inputStartDate.getText())) {
            inputStartDate.setText("0");
        }
        if ("".equals(inputEndDate.getText())) {
            inputEndDate.setText("0");
        }

        if (verify(inputDate) == true && verify(inputStartDate) == true
                && verify(inputEndDate) == true) {//make sure the dates are integers
            int date = Integer.parseInt(inputDate.getText());
            int sDate = Integer.parseInt(inputStartDate.getText());
            int eDate = Integer.parseInt(inputEndDate.getText());

            MultiToolClass cc = new MultiToolClass(inputTitle.getText(),
                    inputKeywords.getText(), inputAuthor.getText(), inputPublisher.getText(),
                    date, sDate, eDate, "");

            this.setVisible(false);
            
            cc.converterMethod();
        }
        
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        //clear the form
        inputTitle.setEnabled(true);
        inputTitle.setText(null);
        inputKeywords.setEnabled(true);
        inputKeywords.setText(null);
        inputAuthor.setEnabled(true);
        inputAuthor.setText(null);
        inputPublisher.setEnabled(true);
        inputPublisher.setText(null);
        inputDate.setEnabled(true);
        inputDate.setText(null);
        inputStartDate.setEnabled(true);
        inputStartDate.setText(null);
        inputEndDate.setEnabled(true);
        inputEndDate.setText(null);
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void inputStartDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputStartDateKeyTyped
        //search range of dates
        //can't search date
        inputDate.setEnabled(false);
    }//GEN-LAST:event_inputStartDateKeyTyped

    private void inputEndDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputEndDateKeyTyped
        //search range of dates
        //can't search date
        inputDate.setEnabled(false);
    }//GEN-LAST:event_inputEndDateKeyTyped

    private void inputDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputDateKeyTyped
        //search dates
        //can't search range of date
        inputStartDate.setEnabled(false);
        inputEndDate.setEnabled(false);
    }//GEN-LAST:event_inputDateKeyTyped

    private void inputKeywordsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeywordsKeyTyped
        //if you search keywords
        //can't search title
        inputTitle.setEnabled(false);
    }//GEN-LAST:event_inputKeywordsKeyTyped

    private void inputTitleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTitleKeyTyped
        //if you search title
        //can't search keywords
        inputKeywords.setEnabled(false);
    }//GEN-LAST:event_inputTitleKeyTyped

    public boolean verify(JTextField input) {
        // Validate input here 
        try {//see if the int parses
            int text = Integer.parseInt(input.getText());
            //good to go
            return true;
        } catch (NumberFormatException e) {
            //error message
            //display an error message
            JOptionPane.showMessageDialog(null, "Your date inputs must be"
                    + " integers. Please input the date as an integer", "",
                    JOptionPane.ERROR_MESSAGE);
            //bring up a new frame
            this.setVisible(false);
            new SearchEngineFinalProj().setVisible(true);
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ClearButton;
    private javax.swing.JToggleButton SearchButton;
    private javax.swing.JTextField inputAuthor;
    private javax.swing.JTextField inputDate;
    private javax.swing.JTextField inputEndDate;
    private javax.swing.JTextField inputKeywords;
    private javax.swing.JTextField inputPublisher;
    private javax.swing.JTextField inputStartDate;
    private javax.swing.JTextField inputTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}

class MultiToolClass {

    String title;
    String author;
    String publisher;
    int date;
    int rangeOfDates1;
    int rangeOfDates2;
    String keywords;
    String finalQuery;
    String category;
    
    JTextArea textArea = new JTextArea("");

    public MultiToolClass(String title1, String keywords2, String author3, String
            publisher4, int date5, int rangeOfDates6, int rangeOfDates7, 
            String category8) {
        title = title1;
        author = author3;
        publisher = publisher4;
        date = date5;
        rangeOfDates1 = rangeOfDates6;
        rangeOfDates2 = rangeOfDates7;
        keywords = keywords2;
        category = category8;
    }

    public void converterMethod() {
        finalQuery = "";
        boolean isFirst = true;     
        boolean rangeOfDatesCatcher = rangeOfDates1 < rangeOfDates2;
        if (!"".equals(title) && !" ".equals(title)) {
            finalQuery += "TITLE ='" + title + "'";
            isFirst = false;
           
        }
        if (!"".equals(keywords)) {
            if (isFirst == false) {
                finalQuery += " AND ";

            } else {
                isFirst = false;
            }
            finalQuery += "TITLE LIKE '%" + keywords + "%' ";

        }
        if (/**
                 * author != null &&
                 */
                !"".equals(author)) {
            if (isFirst == false) {
                finalQuery += " AND ";

            } else {
                isFirst = false;
            }
            finalQuery += " AUTHOR LIKE '%" + author + "%'";

        }
        if (!"".equals(publisher)) {
            if (isFirst == false) {
                finalQuery += " AND ";

            } else {
                isFirst = false;
            }

            finalQuery += " PUBLISHER LIKE '%" + publisher + "%'";
        }

        if (date > 0) {
            if (isFirst == false) {
                finalQuery += " AND ";

            } else {
                isFirst = false;
            }
            finalQuery += "DATES =" + date + "";
            isFirst = false;
        }
        //Here you can change the range of dates if need be
        if (rangeOfDatesCatcher == true && rangeOfDates1 > 0 && rangeOfDates2 > 0) {
            if (isFirst == false) {
                finalQuery += " AND ";

            } else {
                isFirst = false;
            }
            finalQuery += "DATES BETWEEN " + rangeOfDates1 + " AND " + rangeOfDates2 + "";
            isFirst = false;
        }
        if ( !"".equals(category) ) {
         if (isFirst == false) {
         finalQuery += " AND ";
                
         }else{
         isFirst = false;
         }
         finalQuery += "CATEGORY LIKE '%" + category + "%'";
         isFirst = false;
         }
        querySQL();
    }

    public void querySQL() {
        String dbURL = "jdbc:derby://localhost:1527/db";
        Connection c = null;
        Statement stmt = null;
        int count=0;

        try {
            c = DriverManager.getConnection(dbURL);
            c.setAutoCommit(false);
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT TITLE,AUTHOR,PUBLISHER,DATES,LOCATION,CATEGORY FROM APP.CSLIB WHERE " + finalQuery);       
            
           // System.out.println("HERE ARE YOUR RESULTS:");
            System.out.println();
                while (rs.next()) {
                    
                int dte = rs.getInt("DATES"); 
                String ttle = rs.getString("TITLE");
                String auth = rs.getString("AUTHOR");
                String pub = rs.getString("PUBLISHER");
                String locat = rs.getString("LOCATION"); 
                String cat = rs.getString("CATEGORY");
                
                System.out.println("TITLE = " + ttle);
                System.out.println("AUTHOR = " + auth);
                System.out.println("PUBLISHER = " + pub);
                System.out.println( "DATE = " + dte );
                System.out.println("LOCATION = " + locat);
                System.out.println("CATEGORY = "+cat);
                System.out.println();
                
                    
                textArea.append("TITLE = " + ttle + "\n" +
                        "AUTHOR(S) = "+ auth + "\n" +
                        "PUBLISHER(S) = " + pub + "\n" +
                        "DATE = "+ dte + "\n" +
                       "CATEGORIES = "+ cat + "\n" +
                        "LOCATION(S) = " + locat + "\n\n");
                
                count++;
            }   
                if(count > 0){
                    display();
                }
           
             if (count==0){
                    new RefineSearch().setVisible(true);
             }
        } catch (Exception e) {            
            System.exit(0);}        
            
        }
    
    public void display(){
        
        JScrollPane scrollPane = new JScrollPane(textArea);  
            textArea.setLineWrap(true);  
            textArea.setWrapStyleWord(true); 
                scrollPane.setPreferredSize( new Dimension( 500, 500 ) );
                    JOptionPane.showMessageDialog(null, scrollPane, "RESULTS",  
                                       JOptionPane.PLAIN_MESSAGE);
                    
    }
}
        

    
